# pane movement
#bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"	

#bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"	
bind-key T swap-window -t 0

# auto rename
set -g automatic-rename on

# notifications
set-window-option -g window-status-current-bg red
set-option -g bell-on-alert on
set-option -g bell-action any

## Navigation
set -g prefix ^B

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server

# pencereyi %25 bolme 
unbind x
bind-key x command-prompt -p "split-window:"  "split-window '%%' -p 25"

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window

unbind ^N
bind ^N next-window
 
#unbind n
unbind n
bind n next-window

#bind n previous-window
# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^B
bind ^B last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window

#unbind p
unbind p
bind p previous-window

#bind p next-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# kill K k 
unbind K
bind K confirm-before "kill-window"
#unbind k
#bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
#bind l refresh-client

# split -v |
unbind '"'
bind '"' split-window

# :kB: focus up
unbind Tab
# unbind j

#bind Tab select-pane -t:.+
#bind ^j select-pane -t:.-
unbind BTab
bind Tab last-pane	

#bind Tab select-pane -t:.-
unbind \;
#bind \; select-pane -t:.+
#bind-key \; select-pane -R

# " windowlist -b
unbind |
bind | choose-window

# TERMINAL EMULATOR TITLES
set -g set-titles on
set -g set-titles-string "#(tmux ls | awk -F: '{print $1}' | xargs | sed 's/\ / | /g')"
 
#_______________________________________________________________________
# => Status bar duzenleme 						|
#_______________________________________________________________________|
set -g status-attr bright
set-window-option -g window-status-current-bg green
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 0
set -g status-right "#S #I:#P"
bind-key -n C-F3 set-option -g status #Ctrl+F3 Combo

#_______________________________________________________________________
# => Vi key'leri ile dolasma 						|
#_______________________________________________________________________|
set-option -g status-keys vi
set-option -g set-titles on
set-window-option -g mode-keys vi
set -g mode-keys vi

# keep tmux msgs around longer
set -g display-time 3000

# reload config without killing server
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..".
bind-key S choose-session

#_______________________________________________________________________
# => Session'lar
#_______________________________________________________________________|

new -d -s is
 neww -n  zsh

new -d -s mychef 	"ssh chef_server"
 neww -n  chef_node 	"ssh chef_node"

new -d -s SimpleServer 	'cd ~/calisilan_docs/chef_sensu && python -m SimpleHTTPServer'
 neww -n Weechat 	vim
 #neww -n Weechat 	weechat-curses
   splitw -h -p 80
   splitw -h -p 25

new -d -s ipam
 neww -n cassandra1 	'ssh cassandra1'
 neww -n cassandra2 	'ssh cassandra2'
 neww -n jenkins	'ssh ipam-jenkins'
 neww -n db-1		'ssh ipam-ulus-db-1'
 neww -n db-2		'ssh ipam-ulus-db-2'
 neww -n dc-1		'ssh ipam-ulus-dc-1'
 neww -n dc-2		'ssh ipam-ulus-dc-2'
 neww -n dc-3		'ssh ipam-ulus-dc-3'
 neww -n dc-4		'ssh ipam-ulus-dc-4'
 neww -n dc-5		'ssh ipam-ulus-dc-5'
 neww -n dc-6		'ssh ipam-ulus-dc-6'
 neww -n dc-7		'ssh ipam-ulus-dc-7'
 neww -n dc-8		'ssh ipam-ulus-dc-8'
 neww -n report-1 	'ssh ipam-ulus-report-1'
 neww -n report-2 	'ssh ipam-ulus-report-2'
 neww -n redis-1 	'ssh ipam-ulus-redis-1'

new -d -s kota
 neww -n cassandra3 	'ssh cassandra3'
 neww -n cassandra4 	'ssh cassandra4'

new -d -s diger
 neww -n esef-manager 	'ssh esef-manager'

#new -d -s Music	"mocp -T darkdot_theme"
# neww -n Geeknote	'vi -c Geeknote'

#new -d -s lab		~/bin/CopyConsole 
# neww -n music		~/bin/mplist.sh



unbind [
bind Escape copy-mode

unbind z
bind z paste-buffer

# This is available after tmux 1.8
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy y copy-pipe "xclip -i -selection clipboard"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "xclip -i -selection clipboard"

bind-key P command-prompt -p 'save history to filename:' -I '~/.tmux/history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'
set -g base-index 0
set -g pane-base-index 0

unbind +
bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom 
unbind -
bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

bind C-l send-keys 'C-l'

bind -n C-h run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
set -g update-environment -r

# kaynak: https://github.com/tmux-plugins/tpm
# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-open           \
  tmux-plugins/tmux-yank       	   \
  tmux-plugins/tmux-copycat	   \
"
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# initialize s TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm

#set -g mode-mouse on
set -g @yank_selection "primary"
#set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
#set-option default-command "zsh --login"
set -sg escape-time 0

#_______________________________________________________________________
# => tmux-resurrect							|
#_______________________________________________________________________|
#set -g @resurrect-save 'S'
#set -g @resurrect-restore 'R'

#_______________________________________________________________________
# => Gorunum 								|
#_______________________________________________________________________|
source ~/Git_Repolari/diger/tmux-colors-solarized/tmuxcolors-dark.conf
#source ~/Git_Repolari/diger/tmux-colors-solarized/tmuxcolors-light.conf
#source ~/Git_Repolari/diger/tmux-colors-solarized/tmuxcolors-256.conf
