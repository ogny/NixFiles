# PANE MOvement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"	

#bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"	
bind-key r source-file ~/.tmux.conf
bind-key T swap-window -t 0

# auto rename
set -g automatic-rename on

# notifications
set-window-option -g window-status-current-bg red
set-option -g bell-on-alert on
set-option -g bell-action any

## Navigation
# Set the prefix to ^A.
#unbind C-b
#set -g prefix ^A
set -g prefix ^B
#bind b send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind-key x command-prompt -p "split-window:"  "split-window -p 25 '%%'"	

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window

unbind ^N
bind ^N next-window
 
#unbind n
unbind n
bind n next-window

#bind n previous-window
# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^B
bind ^B last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window

#unbind p
unbind p
bind p previous-window

#bind p next-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind '"'
bind '"' split-window

# :kB: focus up
unbind Tab
unbind j

#bind Tab select-pane -t:.+
bind ^j select-pane -t:.-
unbind BTab
bind Tab last-pane	

#bind Tab select-pane -t:.-
unbind \;
bind \; select-pane -t:.+

# " windowlist -b
unbind |
bind | choose-window

# TERMINAL EMULATOR TITLES
set -g set-titles on
set -g set-titles-string "#(tmux ls | awk -F: '{print $1}' | xargs | sed 's/\ / | /g')"
 
# Highlight active window
set -g status-attr bright
set-window-option -g window-status-current-bg green
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 0
set-option -g status-right-length 0
#set -g status-right '#(hostname)@#(ip addr | grep eth1 | grep scope | cut -d " " -f 6 | cut -d "/" -f 1)'
#set -g status-left '#(date |cut -d ":" -f -2)'

#-Usability--------------------------------------------------------------------
set-option -g status-keys vi
set-option -g set-titles on
set-window-option -g mode-keys vi
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)

# keep tmux msgs around longer
set -g display-time 3000

# reload config without killing server
#bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..".
bind-key S choose-session

new -d -s genel weechat-curses
splitw -h -p 80 
splitw -h -p 25 
neww CopyConsole 
new -d -s uzak

unbind [
bind Escape copy-mode

unbind z
bind z paste-buffer

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key P command-prompt -p 'save history to filename:' -I '~/.tmux/history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'
set -g base-index 1
set -g pane-base-index 1

unbind +
bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom 
unbind -
bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

source ~/Git_Repolari/diger/tmux-colors-solarized/tmuxcolors-dark.conf
#source ~/Git_Repolari/diger/tmux-colors-solarized/tmuxcolors-256.conf

bind C-l send-keys 'C-l'

bind -n C-h run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
